name: Build & Deploy (Koyeb)

on:
  push:
    branches: [ "master" ]   # your default branch
  workflow_dispatch:

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    env:
      REGISTRY: ghcr.io
      DOCKER_BUILDKIT: 1
      BUILDKIT_PROGRESS: plain    # ðŸ‘ˆ plain logs in Actions
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Compute image name (lowercase)
        id: meta
        run: |
          owner="${GITHUB_REPOSITORY_OWNER,,}"
          repo="${GITHUB_REPOSITORY##*/}"
          repo="${repo,,}"
          echo "IMAGE=${REGISTRY}/${owner}/${repo}:latest" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push image to GHCR
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false
  

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Install Koyeb CLI
        uses: koyeb-community/koyeb-actions@v2

      - name: Deploy to Koyeb (create or update service)
        env:
          KOYEB_API_TOKEN: ${{ secrets.KOYEB_API_TOKEN }}
          KOYEB_APP: ${{ secrets.KOYEB_APP }}
          KOYEB_SERVICE: ${{ secrets.KOYEB_SERVICE }}
          IMAGE: ${{ env.IMAGE }}
        run: |
          koyeb auth login --token "$KOYEB_API_TOKEN" >/dev/null 2>&1 || true

          # Create app if it doesn't exist
          koyeb app get "$KOYEB_APP" >/dev/null 2>&1 || koyeb app create "$KOYEB_APP"

          # Create or update the service on the free instance
          if koyeb service get "$KOYEB_APP/$KOYEB_SERVICE" >/dev/null 2>&1; then
            koyeb service update "$KOYEB_APP/$KOYEB_SERVICE" \
              --docker "$IMAGE" \
              --routes "/:80" \
              --instance-type "free"
          else
            koyeb service create "$KOYEB_SERVICE" \
              --app "$KOYEB_APP" \
              --docker "$IMAGE" \
              --routes "/:80" \
              --instance-type "free"
          fi
